Laravel provides different drivers or types to handle the session. You can configure session using different drivers.

A driver can be file session, cookie session, array session, Memcached, Redis, APC or database driver.

laravel session configuration is stored in “app/config/session.php
If you are using file session You can take note that Laravel store unique file into storage/framework/sessions directory.

Way of Storing Session in Laravel

file - sessions are stored in storage/framework/sessions.
cookie - sessions are stored in secure, encrypted cookies.
database - sessions are stored in a relational database.
memcached / redis - sessions are stored in one of these fast, cache based stores.
array - sessions are stored in a PHP array and will not be persisted.


Setting a single variable in session :
-----------
Session Create Using Cookie 

syntax  :- Session::put('key', 'value');
example :- 
	
	 Session::put('email', 'akash.padhiyar@gmail.com'); // a single variable
	 Session::put('name', 'Akash Padhiyar'); // a single variable
	 Session::put('email', $email); // a single variable
	 Session::put('email', $data['email']); //array index
          
         

Retrieving value from session :
--------------
syntax :- Session::get('key');
example :- Session::get('email');

Checking a variable exist in session :
-------------
// Checking email key exist in session.

if (Session::has('email')) {
  echo Session::get('email');
}



To get all value of session you can use all() method.
---
Session::all();
// OR
session()->all();



Deleting a variable from session :
----------------------
syntax :- Session::forget('key');
example :- Session::forget('email');


Removing all variables from session :
------------
Session::flush();

$request->session()->flush();


Working with array values :-

Setting an array in session :
---------------
$data = Array( 
[_token] => P1VsHQZQdpguhWN82n9znnfuvG2aAf7fCk8SJtUV 
[email] => demo1006@gmail.com 
[password] => 123456 
) 

Session::push('user', $data);  //$data is an array and user is a session key.


Getting an array item from session :

//array in session looks like 
Array (
    [0] => Array
        (





Flash Data

Sometimes you may wish to store items in the session only for the next request. You may do so using the flash method. Data stored in the session using this method will only be available during the subsequent HTTP request, and then will be deleted. Flash data is primarily useful for short-lived status messages:

$request->session()->flash('status', 'Task was successful!');





--------------------------------------------------
Program:


Use Session Namespace



-----------------------
1.)Create New Controller 

	php artisan make:controller myform

2.)Create New View for MyForm
	
	goto->Resources->views
	
	Create new file form.blade.php

3.) Design Form With HTML Controls


<form method="post" action="{{URL::to('/formprocess')}}">

<input type="hidden" name="_token" value="{{ csrf_token() }}">
Name <input type="text" name="name">
<input type="submit" name="">

</form>


4.) Now goto Controller File

	app->http->controller->myform.php

5.)Create one index() to Call ViewFile in Controller and Show() to Display data.

Use Session;
------------
	use Session;

class myform extends Controller
{
    
    public function index()
    {
    	return view('form');
    }

	public function show(request $request)
   {

			$name = $request->input('name');
			Session::put('username', $name); 
			echo "Session is Created <a href='home'> View</a>";
			  return redirect()->action('myform@myview');
   }

	public function myview(request $request)
	{	
			return view('home');
	}

	public function mylogout(request $request)
	{	
			Session::flush();

            return redirect()->action('myform@index');
	}

}


5.1) home.blade.php




		<?php 
	
			if(Session::has('username'))
		{
			$myname = Session::get('username');
			echo "Hi $myname";
			echo "<a href='logout'>Logout</a>";
		}else
		{
			echo "Session is not Set";
		echo "<a href='form'>Login Now</a>";
		}
	?>



6.) Now define route

	goto->routes->web.php

	
Route::get('/form', 'myform@index')->name('index');

Route::post('/formprocess', 'myform@show')->name('show');

Route::get('/home', 'myform@myview')->name('myview');
 
Route::get('/logout', 'myform@mylogout')->name('mylogout');

	Above Route Will Render Controller data with post method.
 
7.)Now Run Project

http://localhost/hellolaravel/public/form

http://localhost/hellolaravel/public/formprocess

http://localhost/hellolaravel/public/home

http://localhost/hellolaravel/public/logout



Create Session




<form method="post" action="{{URL::to('/formprocess')}}">

<input type="hidden" name="_token" value="{{ csrf_token() }}">

Name <input type="text" name="txt1">


<input type="submit" name="">

</form>





			echo $name = $request->input('txt1');
			//Session Create
			Session::put('mysession', $name);
			Session::get('mysession');




 <?php
if (Session::has('mysession')) {
  echo Session::get('mysession');
}else
{
	echo "No";
}

?>
   		

